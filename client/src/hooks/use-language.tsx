import { createContext, useState, useContext, ReactNode, useEffect } from "react";

// Define available languages
export type Language = 'en' | 'fr' | 'es' | 'de' | 'zh';

// Map of languages to their display names
export const LANGUAGES = {
  'en': 'English',
  'fr': 'Fran√ßais',
  'es': 'Espa√±ol',
  'de': 'Deutsch',
  'zh': '‰∏≠Êñá'
};

// Language options with flags for the dropdown
export const LANGUAGE_OPTIONS = [
  { value: 'en' as Language, label: 'English', flag: 'üá∫üá∏' },
  { value: 'fr' as Language, label: 'Fran√ßais', flag: 'üá´üá∑' },
  { value: 'es' as Language, label: 'Espa√±ol', flag: 'üá™üá∏' },
  { value: 'de' as Language, label: 'Deutsch', flag: 'üá©üá™' },
  { value: 'zh' as Language, label: '‰∏≠Êñá', flag: 'üá®üá≥' }
];

// Translations for the application UI
const translations = {
  en: {
    // Navigation
    dashboard: 'Dashboard',
    encryption: 'Encryption',
    decryption: 'Decryption',
    hashing: 'Hashing',
    keyGenerator: 'Key Generator',
    digitalSignature: 'Digital Signature',
    welcome: 'Welcome',
    settings: 'Settings',
    profile: 'Profile',
    logout: 'Logout',
    signIn: 'Sign In',
    login: 'Login',
    register: 'Register',
    about: 'About',
    help: 'Help',
    home: 'Home',
    logs: 'Activity Logs',
    
    // Common UI elements
    submit: 'Submit',
    cancel: 'Cancel',
    save: 'Save',
    delete: 'Delete',
    edit: 'Edit',
    copy: 'Copy',
    download: 'Download',
    loading: 'Loading...',
    search: 'Search',
    generate: 'Generate',
    selectLanguage: 'Select Language',
    changed: 'changed to',
    languageChangedDesc: 'The interface language has been updated',
    guest: 'Guest',
    notLoggedIn: 'Not logged in',
    notifications: 'Notifications',
    markAllRead: 'Mark all as read',
    noNotifications: 'No notifications',
    new: 'New',
    viewAllNotifications: 'View all notifications',
    notificationsCleared: 'Notifications cleared',
    allNotificationsRead: 'All notifications marked as read',
    loggedOut: 'Logged out',
    logoutSuccess: 'You have been logged out successfully',
    loggingOut: 'Logging out...',
    
    // Authentication
    username: 'Username',
    email: 'Email',
    password: 'Password',
    confirmPassword: 'Confirm Password',
    forgotPassword: 'Forgot Password?',
    createAccount: 'Create Account',
    loginToAccount: 'Login to your account',
    
    // Encryption components
    inputText: 'Input Text',
    encryptedText: 'Encrypted Text',
    decryptedText: 'Decrypted Text',
    selectAlgorithm: 'Select Algorithm',
    encryptBtn: 'Encrypt',
    decryptBtn: 'Decrypt',
    enterKey: 'Enter Key',
    generateKey: 'Generate Key',
    keySize: 'Key Size',
    outputFormat: 'Output Format',
    encryptionKey: 'Encryption Key',
    autoGenerate: 'Auto-generate',
    keyAutoGenerated: 'A key will be generated automatically',
    encryptingText: 'Encrypting...',
    reset: 'Reset',
    encryptionFailed: 'Encryption Failed',
    unknownError: 'Unknown error',
    unexpectedError: 'An unexpected error occurred',
    encryptionSuccessDesc: 'Your text has been encrypted',
    aesKeyHelp: 'For AES-256, enter a 32-byte key or let the system generate one.',
    uploadFile: 'Upload File',
    clear: 'Clear',
    enterTextToEncrypt: 'Enter text to encrypt',
    encryptedOutput: 'Encrypted Output',
    generatedKey: 'Generated Key (Save this securely!)',
    
    // Settings
    theme: 'Theme',
    language: 'Language',
    darkMode: 'Dark Mode',
    lightMode: 'Light Mode',
    systemTheme: 'System Theme',
    
    // Feedback messages
    successEncrypt: 'Text encrypted successfully!',
    successDecrypt: 'Text decrypted successfully!',
    successHash: 'Text hashed successfully!',
    successSignature: 'Signature created successfully!',
    copySuccess: 'Copied to clipboard',
    errorMessage: 'An error occurred',
    
    // Profile page
    accountInfo: 'Account Information',
    updateProfile: 'Update Profile',
    
    // Loading states
    loadingData: 'Loading data...',
    processingRequest: 'Processing your request...'
  },
  fr: {
    // Navigation
    dashboard: 'Tableau de Bord',
    encryption: 'Chiffrement',
    decryption: 'D√©chiffrement',
    hashing: 'Hachage',
    keyGenerator: 'G√©n√©rateur de Cl√©s',
    digitalSignature: 'Signature Num√©rique',
    welcome: 'Bienvenue',
    settings: 'Param√®tres',
    profile: 'Profil',
    logout: 'D√©connexion',
    signIn: 'Se Connecter',
    login: 'Connexion',
    register: 'S\'inscrire',
    about: '√Ä Propos',
    help: 'Aide',
    home: 'Accueil',
    logs: 'Journaux d\'Activit√©',
    
    // Common UI elements
    submit: 'Soumettre',
    cancel: 'Annuler',
    save: 'Sauvegarder',
    delete: 'Supprimer',
    edit: 'Modifier',
    copy: 'Copier',
    download: 'T√©l√©charger',
    loading: 'Chargement...',
    search: 'Rechercher',
    generate: 'G√©n√©rer',
    selectLanguage: 'S√©lectionner la langue',
    changed: 'chang√©e en',
    languageChangedDesc: 'La langue de l\'interface a √©t√© mise √† jour',
    guest: 'Invit√©',
    notLoggedIn: 'Non connect√©',
    notifications: 'Notifications',
    markAllRead: 'Tout marquer comme lu',
    noNotifications: 'Aucune notification',
    new: 'Nouveau',
    viewAllNotifications: 'Voir toutes les notifications',
    notificationsCleared: 'Notifications effac√©es',
    allNotificationsRead: 'Toutes les notifications ont √©t√© marqu√©es comme lues',
    loggedOut: 'D√©connect√©',
    logoutSuccess: 'Vous avez √©t√© d√©connect√© avec succ√®s',
    loggingOut: 'D√©connexion en cours...',
    
    // Authentication
    username: 'Nom d\'utilisateur',
    email: 'Email',
    password: 'Mot de passe',
    confirmPassword: 'Confirmer le mot de passe',
    forgotPassword: 'Mot de passe oubli√©?',
    createAccount: 'Cr√©er un compte',
    loginToAccount: 'Connectez-vous √† votre compte',
    
    // Encryption components
    inputText: 'Texte √† saisir',
    encryptedText: 'Texte chiffr√©',
    decryptedText: 'Texte d√©chiffr√©',
    selectAlgorithm: 'S√©lectionner l\'algorithme',
    encryptBtn: 'Chiffrer',
    decryptBtn: 'D√©chiffrer',
    enterKey: 'Entrez la cl√©',
    generateKey: 'G√©n√©rer une cl√©',
    keySize: 'Taille de la cl√©',
    outputFormat: 'Format de sortie',
    
    // Settings
    theme: 'Th√®me',
    language: 'Langue',
    darkMode: 'Mode Sombre',
    lightMode: 'Mode Clair',
    systemTheme: 'Th√®me du Syst√®me',
    
    // Feedback messages
    successEncrypt: 'Texte chiffr√© avec succ√®s!',
    successDecrypt: 'Texte d√©chiffr√© avec succ√®s!',
    successHash: 'Texte hach√© avec succ√®s!',
    successSignature: 'Signature cr√©√©e avec succ√®s!',
    copySuccess: 'Copi√© dans le presse-papiers',
    errorMessage: 'Une erreur est survenue',
    
    // Profile page
    accountInfo: 'Informations du compte',
    updateProfile: 'Mettre √† jour le profil',
    
    // Loading states
    loadingData: 'Chargement des donn√©es...',
    processingRequest: 'Traitement de votre demande...'
  },
  es: {
    // Navigation
    dashboard: 'Panel',
    encryption: 'Cifrado',
    decryption: 'Descifrado',
    hashing: 'Hashing',
    keyGenerator: 'Generador de Claves',
    digitalSignature: 'Firma Digital',
    welcome: 'Bienvenido',
    settings: 'Configuraci√≥n',
    profile: 'Perfil',
    logout: 'Cerrar Sesi√≥n',
    signIn: 'Iniciar Sesi√≥n',
    login: 'Acceso',
    register: 'Registrarse',
    about: 'Acerca de',
    help: 'Ayuda',
    home: 'Inicio',
    logs: 'Registros de Actividad',
    
    // Common UI elements
    submit: 'Enviar',
    cancel: 'Cancelar',
    save: 'Guardar',
    delete: 'Eliminar',
    edit: 'Editar',
    copy: 'Copiar',
    download: 'Descargar',
    loading: 'Cargando...',
    search: 'Buscar',
    generate: 'Generar',
    
    // Authentication
    username: 'Nombre de usuario',
    email: 'Correo electr√≥nico',
    password: 'Contrase√±a',
    confirmPassword: 'Confirmar contrase√±a',
    forgotPassword: '¬øOlvid√≥ su contrase√±a?',
    createAccount: 'Crear cuenta',
    loginToAccount: 'Inicie sesi√≥n en su cuenta',
    
    // Encryption components
    inputText: 'Texto de entrada',
    encryptedText: 'Texto cifrado',
    decryptedText: 'Texto descifrado',
    selectAlgorithm: 'Seleccionar algoritmo',
    encryptBtn: 'Cifrar',
    decryptBtn: 'Descifrar',
    enterKey: 'Introducir clave',
    generateKey: 'Generar clave',
    keySize: 'Tama√±o de clave',
    outputFormat: 'Formato de salida',
    
    // Settings
    theme: 'Tema',
    language: 'Idioma',
    darkMode: 'Modo Oscuro',
    lightMode: 'Modo Claro',
    systemTheme: 'Tema del Sistema',
    
    // Feedback messages
    successEncrypt: '¬°Texto cifrado con √©xito!',
    successDecrypt: '¬°Texto descifrado con √©xito!',
    successHash: '¬°Texto hasheado con √©xito!',
    successSignature: '¬°Firma creada con √©xito!',
    copySuccess: 'Copiado al portapapeles',
    errorMessage: 'Se ha producido un error',
    
    // Profile page
    accountInfo: 'Informaci√≥n de la cuenta',
    updateProfile: 'Actualizar perfil',
    
    // Loading states
    loadingData: 'Cargando datos...',
    processingRequest: 'Procesando su solicitud...'
  },
  de: {
    // Navigation
    dashboard: 'Dashboard',
    encryption: 'Verschl√ºsselung',
    decryption: 'Entschl√ºsselung',
    hashing: 'Hashing',
    keyGenerator: 'Schl√ºsselgenerator',
    digitalSignature: 'Digitale Signatur',
    welcome: 'Willkommen',
    settings: 'Einstellungen',
    profile: 'Profil',
    logout: 'Abmelden',
    signIn: 'Anmelden',
    login: 'Login',
    register: 'Registrieren',
    about: '√úber',
    help: 'Hilfe',
    home: 'Startseite',
    logs: 'Aktivit√§tsprotokolle',
    
    // Common UI elements
    submit: 'Absenden',
    cancel: 'Abbrechen',
    save: 'Speichern',
    delete: 'L√∂schen',
    edit: 'Bearbeiten',
    copy: 'Kopieren',
    download: 'Herunterladen',
    loading: 'Wird geladen...',
    search: 'Suchen',
    generate: 'Generieren',
    
    // Authentication
    username: 'Benutzername',
    email: 'E-Mail',
    password: 'Passwort',
    confirmPassword: 'Passwort best√§tigen',
    forgotPassword: 'Passwort vergessen?',
    createAccount: 'Konto erstellen',
    loginToAccount: 'In Ihr Konto einloggen',
    
    // Encryption components
    inputText: 'Eingabetext',
    encryptedText: 'Verschl√ºsselter Text',
    decryptedText: 'Entschl√ºsselter Text',
    selectAlgorithm: 'Algorithmus ausw√§hlen',
    encryptBtn: 'Verschl√ºsseln',
    decryptBtn: 'Entschl√ºsseln',
    enterKey: 'Schl√ºssel eingeben',
    generateKey: 'Schl√ºssel generieren',
    keySize: 'Schl√ºsselgr√∂√üe',
    outputFormat: 'Ausgabeformat',
    
    // Settings
    theme: 'Thema',
    language: 'Sprache',
    darkMode: 'Dunkelmodus',
    lightMode: 'Hellmodus',
    systemTheme: 'System-Thema',
    
    // Feedback messages
    successEncrypt: 'Text erfolgreich verschl√ºsselt!',
    successDecrypt: 'Text erfolgreich entschl√ºsselt!',
    successHash: 'Text erfolgreich gehasht!',
    successSignature: 'Signatur erfolgreich erstellt!',
    copySuccess: 'In die Zwischenablage kopiert',
    errorMessage: 'Ein Fehler ist aufgetreten',
    
    // Profile page
    accountInfo: 'Kontoinformationen',
    updateProfile: 'Profil aktualisieren',
    
    // Loading states
    loadingData: 'Daten werden geladen...',
    processingRequest: 'Ihre Anfrage wird bearbeitet...'
  },
  zh: {
    // Navigation
    dashboard: '‰ª™Ë°®Êùø',
    encryption: 'Âä†ÂØÜ',
    decryption: 'Ëß£ÂØÜ',
    hashing: 'ÂìàÂ∏å',
    keyGenerator: 'ÂØÜÈí•ÁîüÊàêÂô®',
    digitalSignature: 'Êï∞Â≠óÁ≠æÂêç',
    welcome: 'Ê¨¢Ëøé',
    settings: 'ËÆæÁΩÆ',
    profile: '‰∏™‰∫∫ËµÑÊñô',
    logout: 'ÁôªÂá∫',
    signIn: 'ÁôªÂΩï',
    login: 'ÁôªÂΩï',
    register: 'Ê≥®ÂÜå',
    about: 'ÂÖ≥‰∫é',
    help: 'Â∏ÆÂä©',
    home: 'È¶ñÈ°µ',
    logs: 'Ê¥ªÂä®Êó•Âøó',
    
    // Common UI elements
    submit: 'Êèê‰∫§',
    cancel: 'ÂèñÊ∂à',
    save: '‰øùÂ≠ò',
    delete: 'Âà†Èô§',
    edit: 'ÁºñËæë',
    copy: 'Â§çÂà∂',
    download: '‰∏ãËΩΩ',
    loading: 'Âä†ËΩΩ‰∏≠...',
    search: 'ÊêúÁ¥¢',
    generate: 'ÁîüÊàê',
    
    // Authentication
    username: 'Áî®Êà∑Âêç',
    email: 'ÁîµÂ≠êÈÇÆ‰ª∂',
    password: 'ÂØÜÁ†Å',
    confirmPassword: 'Á°ÆËÆ§ÂØÜÁ†Å',
    forgotPassword: 'ÂøòËÆ∞ÂØÜÁ†ÅÔºü',
    createAccount: 'ÂàõÂª∫Ë¥¶Êà∑',
    loginToAccount: 'ÁôªÂΩïÂà∞ÊÇ®ÁöÑË¥¶Êà∑',
    
    // Encryption components
    inputText: 'ËæìÂÖ•ÊñáÊú¨',
    encryptedText: 'Âä†ÂØÜÊñáÊú¨',
    decryptedText: 'Ëß£ÂØÜÊñáÊú¨',
    selectAlgorithm: 'ÈÄâÊã©ÁÆóÊ≥ï',
    encryptBtn: 'Âä†ÂØÜ',
    decryptBtn: 'Ëß£ÂØÜ',
    enterKey: 'ËæìÂÖ•ÂØÜÈí•',
    generateKey: 'ÁîüÊàêÂØÜÈí•',
    keySize: 'ÂØÜÈí•Â§ßÂ∞è',
    outputFormat: 'ËæìÂá∫Ê†ºÂºè',
    
    // Settings
    theme: '‰∏ªÈ¢ò',
    language: 'ËØ≠Ë®Ä',
    darkMode: 'ÊöóËâ≤Ê®°Âºè',
    lightMode: '‰∫ÆËâ≤Ê®°Âºè',
    systemTheme: 'Á≥ªÁªü‰∏ªÈ¢ò',
    
    // Feedback messages
    successEncrypt: 'ÊñáÊú¨Âä†ÂØÜÊàêÂäüÔºÅ',
    successDecrypt: 'ÊñáÊú¨Ëß£ÂØÜÊàêÂäüÔºÅ',
    successHash: 'ÊñáÊú¨ÂìàÂ∏åÊàêÂäüÔºÅ',
    successSignature: 'Á≠æÂêçÂàõÂª∫ÊàêÂäüÔºÅ',
    copySuccess: 'Â∑≤Â§çÂà∂Âà∞Ââ™Ë¥¥Êùø',
    errorMessage: 'ÂèëÁîüÈîôËØØ',
    
    // Profile page
    accountInfo: 'Ë¥¶Êà∑‰ø°ÊÅØ',
    updateProfile: 'Êõ¥Êñ∞‰∏™‰∫∫ËµÑÊñô',
    
    // Loading states
    loadingData: 'Âä†ËΩΩÊï∞ÊçÆ‰∏≠...',
    processingRequest: 'Ê≠£Âú®Â§ÑÁêÜÊÇ®ÁöÑËØ∑Ê±Ç...'
  }
};

// Context type definition
type LanguageContextType = {
  language: Language;
  setLanguage: (lang: Language) => void;
  t: (key: string) => string;
};

// Create context
const LanguageContext = createContext<LanguageContextType | undefined>(undefined);

// Provider component
export function LanguageProvider({ children }: { children: ReactNode }) {
  // Get saved language from localStorage or default to English
  const [language, setLanguage] = useState<Language>(() => {
    const savedLang = localStorage.getItem('crypto-language');
    return (savedLang as Language) || 'en';
  });

  // Save language to localStorage when it changes
  useEffect(() => {
    localStorage.setItem('crypto-language', language);
    // Update html lang attribute for accessibility
    document.documentElement.lang = language;
  }, [language]);

  // Translation function
  const t = (key: string): string => {
    // @ts-ignore - we know our translations object structure
    return translations[language][key] || key;
  };

  return (
    <LanguageContext.Provider value={{ language, setLanguage, t }}>
      {children}
    </LanguageContext.Provider>
  );
}

// Hook to use the language context
export function useLanguage() {
  const context = useContext(LanguageContext);
  if (context === undefined) {
    throw new Error('useLanguage must be used within a LanguageProvider');
  }
  return context;
}